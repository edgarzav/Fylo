{"version":3,"sources":["services/bugService.js","services/userService.js","cmps/bugs/BugPreview.js","cmps/bugs/BugList.js","cmps/bugs/Filter.js","pages/BugApp.js","cmps/users/UserPreview.js","cmps/users/UserList.js","pages/UserPage.js","pages/BugDetails.js","pages/UserDetails.js","pages/Login.js","pages/SignUp.js","cmps/NavBar.js","cmps/bugs/BugForm.js","pages/BugEdit.js","pages/BugAdd.js","App.js","serviceWorker.js","index.js"],"names":["BUG_URL","Axios","axios","create","withCredentials","query","filterBy","page","get","title","then","res","data","deleteBug","bugId","delete","_getUrl","addBug","description","severity","post","getBugById","editBug","bug","put","id","USER_URL","KEY","checkCredentials","userName","password","credentials","user","localStorage","setItem","JSON","stringify","getLoggedinUser","parse","getItem","logout","clear","signUp","getUserById","userId","deleteUser","BugPreview","props","this","date","Date","createdAt","toLocaleTimeString","className","index","to","_id","Component","BugList","onChangePage","ev","target","dataset","value","bugs","map","i","key","data-value","onClick","Filter","state","changeInput","field","name","setState","prevState","onFilterClick","onFilter","type","placeholder","onChange","BugApp","loadBugs","bugService","catch","err","history","push","onLogout","userService","diff","length","prevstate","parseInt","isAdmin","UserPreview","onDelete","UserList","users","UserPage","loadUsers","BugDetails","goBack","BugService","loadBug","prevProps","match","params","toLocaleString","creator","UserDetails","deleteuser","loadUser","Login","inputChange","fieldName","onLogin","preventDefault","console","log","SignUp","onSignUp","NavBar","activeClassName","exact","BugForm","onSave","setFormDataForEdit","imgUrl","BugEdit","onEditBug","BugAdd","onAddBug","App","component","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efa7872f.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst BUG_URL = 'http://localhost:3002/api/bug';\r\nconst Axios = axios.create({\r\n    withCredentials: true\r\n  });\r\n  \r\nexport default {\r\n    query,\r\n    deleteBug,\r\n    addBug,\r\n    getBugById,\r\n    editBug,\r\n};\r\n\r\n\r\n\r\nfunction query(filterBy,page) {\r\n    return Axios.get(`${BUG_URL}/?q=${filterBy.title}&page=${page}`).then(res => res.data)\r\n}\r\n\r\nfunction getBugById(bugId) {\r\n    return Axios.get(_getUrl(bugId)).then(res => res.data);\r\n}\r\n\r\n\r\nfunction editBug(bugId, title, description, severity) {\r\n    var bug = { title, description, severity }\r\n    return Axios.put(_getUrl(bugId), bug).then(res => res.data);\r\n}\r\n\r\nfunction addBug(title, description, severity) {\r\n    return Axios.post(BUG_URL, { title, description, severity }).then(res => res.data);\r\n}\r\n\r\nfunction deleteBug(bugId) {\r\n    return Axios.delete( _getUrl(bugId)).then(res => res.data);\r\n}\r\n\r\nfunction _getUrl(id) {\r\n    return `${BUG_URL}/${id}`\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\nconst USER_URL = 'http://localhost:3002/api/user/';\r\nconst KEY = 'loggedinUser';\r\nconst Axios = axios.create({\r\n    withCredentials: true\r\n  });\r\n  \r\n\r\nexport default {\r\n    checkCredentials,\r\n    getLoggedinUser,\r\n    logout,\r\n    signUp,\r\n    query,\r\n    getUserById,\r\n    deleteUser\r\n}\r\n\r\nfunction query() {\r\n    return Axios.get(USER_URL).then(res => res.data)\r\n}\r\n\r\n\r\nfunction getLoggedinUser() {\r\n    const user = JSON.parse(localStorage.getItem(KEY));\r\n    return user;\r\n}\r\n\r\nfunction logout() {\r\n    return Axios.post(`${USER_URL}/logout`)\r\n        .then(() => {\r\n            localStorage.clear();\r\n        })\r\n}\r\n\r\nfunction checkCredentials(userName, password) {\r\n    const credentials = { userName, password }\r\n    return Axios.post(USER_URL, credentials)\r\n        .then(res => res.data)\r\n        .then(user => {\r\n            localStorage.setItem(KEY, JSON.stringify(user));\r\n            return user\r\n        })\r\n}\r\nfunction signUp(userName, password) {\r\n    return Axios.post(`${USER_URL}signup`, { userName, password })\r\n        .then(res => res.data)\r\n        .then(user => {\r\n            localStorage.setItem(KEY, JSON.stringify(user));\r\n            return user\r\n        })\r\n}\r\n\r\nfunction getUserById(userId) {\r\n    return Axios.get(_getUrl(userId)).then(res => res.data);\r\n}\r\n\r\nfunction deleteUser(userId) {\r\n    return Axios.delete(_getUrl(userId)).then(res => res.data);\r\n}\r\n\r\nfunction _getUrl(id) {\r\n    return `${USER_URL}${id}`\r\n}","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class BugPreview extends Component {\r\n\r\n    render() {\r\n        const { props } = this;\r\n        const date = new Date(props.bug.createdAt).toLocaleTimeString()\r\n        return <li className={`list-item flex ${(props.index % 2 === 0) ? 'line-color' : ''} `}>\r\n            <h2>{props.index}.</h2>\r\n            <Link to={`/bug/${props.bug._id}`}> <h2 className=\"bug-title\">{props.bug.title}</h2></Link>\r\n            <Link to={`/user/${props.user._id}`}> <h2 className=\"bug-user\"> {props.user.userName}</h2></Link>\r\n            <h2 className=\"bug-date\">{date}</h2>\r\n        </li >\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from \"react\";\r\n\r\nimport BugPreview from \"./BugPreview.js\";\r\n\r\nexport default class BugList extends Component {\r\n\r\n    onChangePage = (ev) => {\r\n        this.props.onChangePage(ev.target.dataset.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"bug-list\">\r\n            <ul>{this.props.bugs.map((bug, i) => <BugPreview key={i} index={i} user={this.props.user} bug={bug}></BugPreview>)}</ul>\r\n            <button data-value={-1} onClick={this.onChangePage}>Previous</button>\r\n            <button data-value={1} onClick={this.onChangePage}>Next</button>\r\n        </div>\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from \"react\";\r\nexport default class Filter extends Component {\r\n    state = {\r\n        filterBy: { title: '' }\r\n    }\r\n    changeInput = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }))\r\n    }\r\n\r\n    onFilterClick = () => {\r\n        this.props.onFilter(this.state.filterBy)\r\n    }\r\n    render() {\r\n        const { title } = this.state.filterBy\r\n        return <div>\r\n            <input type=\"text\" placeholder=\"title\" value={title}\r\n                onChange={this.changeInput} name=\"title\"></input>\r\n            <button onClick={this.onFilterClick}>Filter</button>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport bugService from '../services/bugService'\r\nimport userService from '../services/userService'\r\n\r\nimport BugList from '../cmps/bugs/BugList'\r\nimport Filter from '../cmps/bugs/Filter';\r\n\r\nexport default class BugApp extends Component {\r\n    state = {\r\n        user: null,\r\n        bugs: [],\r\n        filterBy: { title: '' },\r\n        page: 1\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBugs();\r\n        const user = userService.getLoggedinUser();\r\n        this.setState({ user });\r\n    }\r\n\r\n    loadBugs = () => {\r\n        bugService.query(this.state.filterBy, this.state.page).then(bugs => {\r\n            this.setState({ bugs: bugs })\r\n        }).catch((err) => {\r\n            this.props.history.push('/')\r\n        });\r\n    }\r\n\r\n    onFilter = (filterBy) => {\r\n        this.setState({ filterBy }, this.loadBugs);\r\n    }\r\n    onLogout = () => {\r\n        userService.logout()\r\n            .then(res => {\r\n                this.props.history.push('/')\r\n            })\r\n    }\r\n\r\n    onChangePage = (diff) => {\r\n        const { page, bugs } = this.state\r\n\r\n        if (diff == -1 && page === 1) return\r\n        if (diff == 1 && page > 1 && !bugs.length) return\r\n        this.setState(prevstate => ({ page: prevstate.page += parseInt(diff) }), this.loadBugs)\r\n    }\r\n\r\n    render() {\r\n        const { userName, _id, isAdmin } = (this.state.user) ? this.state.user : '';\r\n        return (\r\n            <section className=\"bug-app container\">\r\n                <h2>Hello {userName}</h2>\r\n                <div className=\"control-container flex space-between\">\r\n                    <div>\r\n                        <button onClick={this.onLogout}>Logout</button>\r\n                        <Link to={`/user/${_id}`}><button>Profile</button></Link>\r\n\r\n                        {(this.state.user && isAdmin) ?\r\n                            <Link to={`/user/`} ><button>Users List</button></Link> : ''\r\n                        }\r\n                    </div>\r\n                    <Filter onFilter={this.onFilter}></Filter>\r\n                </div>\r\n                <h2>Bugs</h2>\r\n                <BugList onChangePage={this.onChangePage} user={this.state.user} bugs={this.state.bugs} ></BugList>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\n\nexport default class UserPreview extends Component {\n\n    onDelete = () => {\n        this.props.onDelete(this.props.user._id)\n    }\n\n    render() {\n        const { user,index } = this.props;\n        return <li  className={`list-item flex ${(index % 2 === 0) ? 'line-color' : ''} `}>\n            <Link to={`/user/${user._id}`}> <h2 className=\"user-name\">{user.userName}</h2>  </Link>\n            <button onClick={this.onDelete}>Delete</button>\n        </li>\n    }\n}","import React from 'react';\nimport UserPreview from \"./UserPreview.js\";\n\nexport default function UserList(props) {\n    return props.users ? <ul className=\"user-list container\">{props.users.map((user, i) => <UserPreview onDelete={props.onDelete} key={i} index={i} user={user}></UserPreview>)}</ul> : ''\n}","import React from 'react';\nimport { Component } from \"react\";\n\nimport userService from '../services/userService.js'\nimport UserList from '../cmps/users/UserList.js'\n\nexport default class UserPage extends Component {\n    state = { users: null }\n\n    componentDidMount() {\n        this.loadUsers();\n    }\n\n    loadUsers = () => {\n        userService.query().then(users => {\n            this.setState({ users: users })\n\n        }).catch((err) => {\n            this.props.history.push('/')\n        });\n    }\n\n    onDelete = (userId) => {\n        userService.deleteUser(userId).then(() => {\n            this.loadUsers()\n        });\n    }\n\n\n    render() {\n        return (\n            <section>\n                <h2>Users</h2>\n                <UserList onDelete={this.onDelete} users={this.state.users} ></UserList>\n            </section>\n        )\n    }\n}","import BugService from '../services/bugService.js'\r\nimport React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Component } from \"react\";\r\n// const { Link } = ReactRouterDOM\r\n\r\nexport default class BugDetails extends Component {\r\n\r\n    state = {\r\n        bug: null\r\n    }\r\n    componentDidMount() {\r\n        this.loadBug();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id\r\n            !== this.props.match.params.id) {\r\n            this.loadBug();\r\n        }\r\n    }\r\n\r\n    loadBug() {\r\n        const { id } = this.props.match.params;\r\n\r\n        BugService.getBugById(id).then(bug => {\r\n            this.setState({ bug: bug })\r\n        })\r\n    }\r\n\r\n    goBack = () => {\r\n        this.props.history.push('/bug')\r\n    }\r\n\r\n    onDelete = () => {\r\n        BugService.deleteBug(this.state.bug._id).then(() => {\r\n            this.props.history.push('/bug')\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.bug) return <div className=\"loading\">Loading...</div>\r\n        const { bug } = this.state;\r\n        return (<div className=\"container\">\r\n            <h2>{bug.title}</h2>\r\n            <p>{new Date(bug.createdAt).toLocaleString()}</p>\r\n            <h2>{bug.description}</h2>\r\n            <h2> Creator: {bug.creator.userName}</h2>\r\n\r\n            <button onClick={this.goBack}>BACK</button>\r\n            <button onClick={this.onDelete}>Delete</button>\r\n            <Link to={`/bug/${bug._id}/edit`} ><button>Edit</button></Link>\r\n        </div>\r\n        )\r\n    }\r\n}","import userService from '../services/userService.js'\n// const { Link } = ReactRouterDOM\n// import { Link } from 'react-router-dom';\nimport React from 'react';\nimport { Component } from \"react\";\n\nexport default class UserDetails extends Component {\n\n    state = {\n        user: null\n    }\n    componentDidMount() {\n        this.loadUser();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.id\n            !== this.props.match.params.id) {\n            this.loadUser();\n        }\n    }\n\n    loadUser() {\n        const { id } = this.props.match.params;\n\n        userService.getUserById(id).then(user => {\n            this.setState({ user: user })\n        })\n    }\n\n    goBack = () => {\n        this.props.history.push('/user')\n    }\n\n    onDelete = () => {\n        userService.deleteuser(this.state.user._id).then(() => {\n            this.props.history.push('/user')\n        });\n    }\n\n    render() {\n        if (!this.state.user) return <div className=\"loading\">Loading...</div>\n        const { user } = this.state;\n        return (<div className=\"container\">\n            <h2>{user.userName}</h2>\n            <h2> {user.isAdmin ? 'User is admin' : 'User is not admin'}</h2>\n        </div>\n        )\n    }\n}","import userService from \"../services/userService.js\"\r\nimport React from 'react';\r\nimport { Component } from \"react\";\r\nexport default class Login extends Component {\r\n    state = { userName: '', password: '' }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name\r\n        this.setState({ [fieldName]: ev.target.value })\r\n    }\r\n\r\n    onLogin = (ev) => {\r\n        ev.preventDefault();\r\n        userService.checkCredentials(this.state.userName, this.state.password)\r\n            .then(user => {\r\n                console.log('User:', user)\r\n                this.props.history.push('/bug')\r\n            })\r\n            .catch(err => {\r\n                console.log('Had Issues:', err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { userName, password } = this.state\r\n        return (\r\n            <section className=\"login-container container flex justify-center\">\r\n                <form className=\"flex column align-center\">\r\n                    <input type=\"text\" placeholder=\"name\" name=\"userName\"\r\n                        onChange={this.inputChange} value={userName} />\r\n                    <input type=\"text\" placeholder=\"password\" name=\"password\"\r\n                        onChange={this.inputChange} value={password} />\r\n                    <button onClick={this.onLogin}>Login</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}","import userService from \"../services/userService.js\"\nimport React from 'react';\nimport { Component } from \"react\";\nexport default class SignUp extends Component {\n    state = { userName: '', password: '' }\n\n    inputChange = (ev) => {\n        let fieldName = ev.target.name\n        this.setState({ [fieldName]: ev.target.value })\n    }\n\n    onSignUp = (ev) => {\n        ev.preventDefault();\n        userService.signUp(this.state.userName, this.state.password)\n            .then(user => {\n                console.log('User:', user)\n                this.props.history.push('/bug')\n            })\n            .catch(err => {\n                console.log('Had Issues:', err)\n            })\n    }\n\n    render() {\n        const { userName, password } = this.state\n        return (\n            <section className=\"sign-up container flex justify-center\">\n                <form className=\"flex column align-center\">\n                    <h2>Sign Up</h2>\n                    <input type=\"text\" placeholder=\"name\" name=\"userName\"\n                        onChange={this.inputChange} value={userName} />\n                    <input type=\"text\" placeholder=\"password\" name=\"password\"\n                        onChange={this.inputChange} value={password} />\n                    <button onClick={this.onSignUp}>Sign Up</button>\n                </form>\n            </section>\n        )\n    }\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function NavBar(props) {\r\n    return <nav className=\"main-header\">\r\n        <ul className=\"container flex align-center\">\r\n            <h2><NavLink activeClassName=\"active\" to='/' exact>Login</NavLink></h2>\r\n            <h2><NavLink activeClassName=\"active\" to='/user/signup' exact>Sign Up</NavLink></h2>\r\n            <h2><NavLink activeClassName=\"active\" to='/bug'>Bugs</NavLink></h2>\r\n            <h2><NavLink activeClassName=\"active\" to='/BugAdd'>New Bug</NavLink></h2>\r\n        </ul>\r\n    </nav>\r\n}","\r\nimport React from 'react';\r\nimport { Component } from \"react\";\r\n\r\nexport default class BugForm extends Component {\r\n    state = {\r\n        title: '',\r\n        description: '',\r\n        severity: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setFormDataForEdit();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.bug !== this.props.bug) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    setFormDataForEdit() {\r\n        const { bug: bug } = this.props;\r\n        if (bug) {\r\n            this.setState({ name: bug.name, imgUrl: bug.imgUrl })\r\n        }\r\n    }\r\n\r\n    onSave = () => {\r\n        this.props.onSave(this.state.title, this.state.description, this.state.severity).catch()\r\n        this.setState({ title: '', description: '', severity: '' })\r\n    }\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name\r\n        this.setState({ [fieldName]: ev.target.value })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"flex justify-center column\">\r\n            <input type=\"text\" placeholder=\"title\" name=\"title\"\r\n                onChange={this.inputChange} value={this.state.title}></input>\r\n            <input type=\"text\" placeholder=\"description\" name=\"description\"\r\n                onChange={this.inputChange} value={this.state.description}></input>\r\n            <input type=\"text\" placeholder=\"severity\" name=\"severity\"\r\n                onChange={this.inputChange} value={this.state.severity}></input>\r\n            <button onClick={this.onSave}>Save</button>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from \"react\";\r\n\r\nimport BugForm from \"../cmps/bugs/BugForm.js\";\r\nimport bugService from \"../services/bugService.js\";\r\n\r\nexport default class BugEdit extends Component {\r\n    state = {\r\n        bug: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBug();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id\r\n            !== this.props.match.params.id) {\r\n            this.loadBug();\r\n        }\r\n    }\r\n\r\n    loadBug() {\r\n        bugService.getBugById(this.props.match.params.id).then(bug => {\r\n            this.setState({ bug: bug })\r\n        })\r\n    }\r\n\r\n\r\n    onEditBug = (title, description, severity) => {\r\n        return bugService.editBug(this.state.bug._id, title, description, severity).then(bug => {\r\n            this.props.history.push('/bug/' + bug._id);\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return <BugForm bug={this.state.bug} onSave={this.onEditBug}></BugForm>\r\n    }\r\n} ","import BugForm from \"../cmps/bugs/BugForm.js\";\r\nimport bugService from \"../services/bugService.js\";\r\nimport React from 'react';\r\nimport { Component } from \"react\";\r\nexport default class BugAdd extends Component {\r\n\r\n    onAddBug = (title, description, severity) => {\r\n        return bugService.addBug(title, description, severity).then(bug => {\r\n            this.props.history.push('/bug/' + bug._id);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"bug-add flex justify-center\">\r\n            <BugForm onSave={this.onAddBug}></BugForm>\r\n        </div>\r\n\r\n    }\r\n} ","import React from 'react';\nimport './styles/global.scss';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nimport './App.css';\n\nimport BugApp from './pages/BugApp'\nimport UserPage from './pages/UserPage'\nimport BugDetails from './pages/BugDetails'\nimport UserDetails from './pages/UserDetails'\n\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport NavBar from './cmps/NavBar'\nimport BugEdit from './pages/BugEdit'\nimport BugAdd from './pages/BugAdd'\n\n\nfunction App() {\n  return (\n    <main>\n       <Router>\n          <NavBar></NavBar>\n          <Switch>\n             <Route component={Login} path=\"/\" exact></Route>\n             <Route component={SignUp} path=\"/user/signup\" exact></Route>\n             <Route component={UserDetails} path=\"/user/:id\" exact></Route>\n             <Route component={UserPage} path=\"/user/\" exact></Route>\n             <Route component={BugApp} path=\"/bug\" exact></Route>\n             <Route component={BugAdd} path=\"/BugAdd\" exact></Route>\n             <Route component={BugEdit} path=\"/bug/:id/edit\" exact></Route>\n             <Route component={BugDetails} path=\"/bug/:id\" exact></Route>\n          </Switch>\n       </Router>\n    </main>\n )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}